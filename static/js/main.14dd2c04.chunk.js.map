{"version":3,"sources":["Firebase/firebase.ts","Utils/useUsername.tsx","Navigation/Navbar.tsx","Pages/Home/Home.tsx","Pages/About/About.tsx","Pages/SignIn/SignIn.tsx","Pages/SignUp/SignUp.tsx","Pages/ResetPassword/ResetPassword.tsx","Pages/UserPages/AccountPage/AccountPage.tsx","Utils/useLogData.tsx","Pages/UserPages/DashboardPage/DashboardPage.tsx","Pages/UserPages/SubmitLogPage/SubmitLogPage.tsx","Components/DateRangePicker/index.tsx","Pages/UserPages/LogListPage/Components/Transition.tsx","Pages/UserPages/LogListPage/Components/SummaryBox.tsx","Pages/UserPages/LogListPage/Components/Summary.tsx","Pages/UserPages/LogListPage/Components/Header.tsx","Pages/UserPages/LogListPage/LogListPage.tsx","App.tsx","index.tsx"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","logInWithEmailAndPassword","GoogleAuthProvider","_ref2","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee2","email","password","wrap","_context2","prev","next","signInWithEmailAndPassword","t0","console","error","stop","_x","_x2","apply","this","arguments","submitEntryToFirebase","_ref3","_callee3","gojekEarnings","tadaEarnings","grabEarnings","rydeEarnings","date","distance","userId","discountedLitrePetrol","userInfo","totalRevenue","petrolCost","_context3","fetchUserId","sent","getPetrolPrice","fetchUserInfo","Math","round","parseFloat","fuelEfficiency","addDoc","collection","toDate","getTime","totalProfit","abrupt","_x3","_x4","_x5","_x6","_x7","_x8","editEntryOnFirebase","_ref4","_callee4","log","id","docsRef","_log","_context4","doc","getDoc","data","setDoc","objectSpread","then","catch","_x9","registerWithEmailAndPassword","_ref5","_callee5","name","carModel","petrolStation","fuelGrade","res","user","_context5","createUserWithEmailAndPassword","uid","authProvider","_x10","_x11","_x12","_x13","_x14","_x15","_x16","sendPasswordReset","_ref6","_callee6","_context6","sendPasswordResetEmail","alert","_x17","logout","signOut","_ref7","_callee7","userDoc","_context7","_ref8","_callee8","q1","_doc","_context8","currentUser","query","where","getDocs","docs","fetchPetrolData","_ref9","_callee9","otherDate","docRef","docSnap","_context9","diff","moment","subtract","Error","format","exists","_x18","_x19","_ref10","_callee10","petrolType","petrolProfile","petrolData","userPetrolPrice","discountedPetrol","_context10","toLowerCase","raw_prices","_x20","useUsername","_useState","useState","_useState2","slicedToArray","setName","_useAuthState","useAuthState","_useAuthState2","loading","navigate","useNavigate","fetchUserName","_ref","useUsername_regeneratorRuntime","_callee","q","_context","useEffect","info","user_pages","pageName","pageLink","general_pages","theme","createTheme","status","danger","palette","primary","main","darker","neutral","contrastText","Navbar","anchorElNav","setAnchorElNav","handleOpenNavMenu","event","currentTarget","handleCloseNavMenu","react_default","a","createElement","emotion_element_cbed451f_browser_esm","AppBar","position","sx","padding","backgroundColor","color","boxShadow","Container","maxWidth","Toolbar","disableGutters","Hail_default","display","xs","md","mr","Typography","variant","noWrap","component","fontFamily","fontWeight","letterSpacing","textDecoration","Box","flexGrow","map","page","react_router_dom","className","to","concat","MenuItem","key","onClick","textAlign","IconButton","size","aria-label","aria-controls","aria-haspopup","border","borderRadius","Menu_default","SwipeableDrawer","keepMounted","open","Boolean","onOpen","onClose","href","fontSize","Tooltip","title","Add_default","Button","Home","style","top","left","transform","src","alt","About","SignIn","setEmail","_useState3","_useState4","setPassword","type","value","onChange","e","target","placeholder","Register","_useState5","_useState6","_useState7","_useState8","setCarModel","_useState9","_useState10","setFuelEfficiency","_useState11","_useState12","setPetrolStation","_useState13","_useState14","setFuelGrade","TextField","label","required","marginBottom","FormControl","marginTop","InputLabel","Select","labelId","undefined","find","ele","Reset","AccountPage","useLogData","logData","setLogData","fetchLogData","useLogData_regeneratorRuntime","q2","_logData","Date","Dashboard","SubmitLogPage","setGojekEarnings","setTadaEarnings","setGrabEarnings","setRydeEarnings","setDate","setDistance","isLoading","setIsLoading","_useState15","_useState16","snackbar","setSnackbar","_useState17","_useState18","snackbarType","setSnackbarType","_useState19","_useState20","newlyLoggedDates","setNewlyLoggedDates","_useState21","_useState22","submitStatus","setSubmitStatus","loggedDates","reduce","b","toConsumableArray","getFormattedDate","submitEntry","SubmitLogPage_regeneratorRuntime","finally","state","LocalizationProvider","dateAdapter","AdapterMoment","Grid","direction","spacing","container","item","DesktopDatePicker","minDate","disableFuture","inputFormat","renderInput","params","assign","fullWidth","includes","Alert","severity","InputProps","startAdornment","InputAdornment","margin","disabled","Backdrop","zIndex","drawer","CircularProgress","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","width","yyyy","getFullYear","mm","getMonth","dd","getDate","pastMonth","DateRangePicker","props","dateRange","handleDateRange","react_day_picker_dist_index_esm","mode","defaultMonth","selected","onSelect","Transition","forwardRef","ref","Slide","SummaryBox","children","background","Summary","totalTotalProfit","totalTotalRevenue","totalPetrolCosts","totalDistance","Components_SummaryBox","justifyContent","PriceCheck_default","marginLeft","Receipt_default","LocalGasStation_default","Garage_default","Header","totalResults","height","Fragment","from","toLocaleDateString","LogListPage","hide","setHide","openDialog","setOpenDialog","selectedLog","setSelectedLog","dateFilterDialog","setDateFilterDialog","dateFilter","setDateFilter","customDate","setCustomDate","orderBy","columns","field","headerName","renderCell","renderDialog","Edit_default","handleEditDialog","row","DateRangeDisplay","currentLog","mappedLog","logDataFiltered","filter","setHours","_logDataFiltered$redu","startIcon","CalendarMonth_default","Dialog","fullScreen","transitionDuration","edge","Close_default","ml","flex","autoFocus","endIcon","Info_default","Components_Header","length","Components_Summary","DataGrid","autoHeight","rowsPerPageOptions","componentsProps","footer","rows","TransitionComponent","App","Navigation_Navbar","react_router","path","element","Pages_About_About","Pages_Home_Home","Pages_SignIn_SignIn","SignUp","DashboardPage","UserPages_AccountPage_AccountPage","UserPages_SubmitLogPage_SubmitLogPage","ResetPassword","UserPages_LogListPage_LogListPage","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.14dd2c04.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport {\n  GoogleAuthProvider,\n  getAuth,\n  signInWithPopup,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  sendPasswordResetEmail,\n  signOut,\n} from 'firebase/auth';\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n  setDoc,\n  doc,\n  getDoc,\n  DocumentData,\n} from 'firebase/firestore';\nimport moment from 'moment';\nimport { LogInfo, UserInfo } from '../Utils/types';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDkzczYXW6sCsTh1yzdDo1YSiGP9yd2KFw',\n  authDomain: 'phvrofits.firebaseapp.com',\n  databaseURL:\n    'https://phvrofits-default-rtdb.asia-southeast1.firebasedatabase.app',\n  projectId: 'phvrofits',\n  storageBucket: 'phvrofits.appspot.com',\n  messagingSenderId: '1082643447398',\n  appId: '1:1082643447398:web:770a40726ba170c15bb7a7',\n};\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst googleProvider = new GoogleAuthProvider();\nconst signInWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(db, 'users'), where('uid', '==', user.uid));\n    const docs = await getDocs(q);\n    if (docs.docs.length === 0) {\n      await addDoc(collection(db, 'users'), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: 'google',\n        email: user.email,\n      });\n    }\n  } catch (err) {\n    console.error(err);\n  }\n};\nconst logInWithEmailAndPassword = async (email: string, password: string) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst submitEntryToFirebase = async (\n  gojekEarnings: number,\n  tadaEarnings: number,\n  grabEarnings: number,\n  rydeEarnings: number,\n  date: moment.Moment,\n  distance: number\n) => {\n  try {\n    const userId = await fetchUserId();\n    const discountedLitrePetrol = await getPetrolPrice(date);\n    const userInfo = await fetchUserInfo();\n    const totalRevenue =\n      Math.round(\n        (gojekEarnings + tadaEarnings + grabEarnings + rydeEarnings) * 100\n      ) / 100;\n    const petrolCost =\n      discountedLitrePetrol *\n      (distance / 100) *\n      parseFloat(userInfo.fuelEfficiency);\n    await addDoc(collection(db, 'users/' + userId + '/logs'), {\n      gojekEarnings,\n      tadaEarnings,\n      grabEarnings,\n      rydeEarnings,\n      date: date.toDate().getTime(),\n      distance,\n      totalRevenue,\n      fuelEfficiency: parseFloat(userInfo.fuelEfficiency),\n      discountedLitrePetrol,\n      petrolCost,\n      totalProfit: totalRevenue - petrolCost,\n    });\n  } catch (err) {\n    console.error(err);\n    return false;\n  }\n  return true;\n};\n\nconst editEntryOnFirebase = async (log: LogInfo) => {\n  const {\n    id,\n    gojekEarnings,\n    tadaEarnings,\n    grabEarnings,\n    rydeEarnings,\n    distance,\n    totalProfit,\n    totalRevenue,\n    petrolCost,\n  } = log;\n  try {\n    const userId = await fetchUserId();\n    console.log(userId);\n    const docsRef = doc(db, 'users/' + userId + '/logs', id);\n    const log = (await getDoc(docsRef)).data();\n    if (log) {\n      setDoc(docsRef, {\n        // TODO test this logic\n        ...log,\n        gojekEarnings,\n        tadaEarnings,\n        grabEarnings,\n        rydeEarnings,\n        distance,\n        totalRevenue,\n        petrolCost,\n        totalProfit,\n      })\n        .then(() => {\n          console.log('Entire Document has been updated successfully');\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  } catch (err) {\n    console.error(err);\n    return false;\n  }\n  return true;\n};\n\nconst registerWithEmailAndPassword = async (\n  name: string,\n  email: string,\n  password: string,\n  carModel: string,\n  fuelEfficiency: string,\n  petrolStation: string,\n  fuelGrade: string\n) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, 'users'), {\n      uid: user.uid,\n      name,\n      authProvider: 'local',\n      email,\n      carModel,\n      fuelEfficiency,\n      petrolStation,\n      fuelGrade,\n    });\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst sendPasswordReset = async (email: string) => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert('Password reset link sent!');\n  } catch (err) {\n    console.error(err);\n  }\n};\nconst logout = () => {\n  signOut(auth);\n};\n\nconst fetchUserInfo = async (): Promise<UserInfo> => {\n  try {\n    const user = await fetchUserId();\n    const docsRef = doc(db, 'users/' + user);\n    const userDoc = (await getDoc(docsRef)).data() as UserInfo;\n    return userDoc;\n  } catch (err) {\n    console.error(err);\n  }\n  return {} as UserInfo;\n};\n\nexport {\n  auth,\n  db,\n  signInWithGoogle,\n  logInWithEmailAndPassword,\n  registerWithEmailAndPassword,\n  sendPasswordReset,\n  logout,\n  submitEntryToFirebase,\n  editEntryOnFirebase,\n  fetchUserInfo,\n};\n\n// functions from here are not meant to be exported\n\nconst fetchUserId = async () => {\n  try {\n    const user = auth.currentUser;\n    const q1 = query(\n      collection(db, 'users'),\n      where('uid', '==', user && user.uid)\n    );\n    const doc = (await getDocs(q1)).docs[0];\n    return doc.id;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst fetchPetrolData = async (\n  date: moment.Moment,\n  otherDate?: moment.Moment\n): Promise<DocumentData | undefined> => {\n  if (otherDate && otherDate.diff(moment(date).subtract(30, 'days')) === 0) {\n    // History not long enough... must be after 8/6/2021\n    // Return some form of error message in FE\n    throw new Error('No such record found');\n  }\n  try {\n    const docRef = doc(\n      db,\n      'gas_prices',\n      otherDate ? otherDate.format('YYYYMMDD') : date.format('YYYYMMDD')\n    );\n    const docSnap = await getDoc(docRef);\n    if (!docSnap.exists()) {\n      // doc.data() will be undefined in this case\n      console.log(docSnap.data());\n      return fetchPetrolData(\n        date,\n        otherDate\n          ? otherDate.subtract(1, 'days')\n          : moment(date).subtract(1, 'days')\n      );\n    }\n    return docSnap.data();\n  } catch (err) {\n    console.error(err);\n    alert('An error occured while fetching user data!');\n  }\n};\n\nconst getPetrolPrice = async (date: moment.Moment) => {\n  // get user's petrol station and petrol type\n  const userDoc = await fetchUserInfo();\n  const petrolStation = (userDoc && userDoc.petrolStation) || 'esso';\n  const petrolType = (userDoc && userDoc.fuelGrade) || '95';\n  const petrolProfile = (petrolStation + '_' + petrolType).toLowerCase();\n  // get the date's petrol prices from db\n  const petrolData = await fetchPetrolData(date);\n  const userPetrolPrice = petrolData && petrolData[petrolProfile];\n  const discountedPetrol =\n    petrolData && petrolData.raw_prices\n      ? userPetrolPrice * 0.8 // using 0.8 as a rough estimate for discounts\n      : userPetrolPrice;\n  return discountedPetrol;\n};\n","import { collection, getDocs, query, where } from 'firebase/firestore';\nimport { useEffect, useState } from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useNavigate } from 'react-router-dom';\nimport { auth, db } from '../Firebase';\n\nconst useUsername = () => {\n  const [name, setName] = useState('');\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useNavigate();\n\n  const fetchUserName = async () => {\n    try {\n      const q = query(\n        collection(db, 'users'),\n        where('uid', '==', user && user.uid)\n      );\n      const doc = await getDocs(q);\n      const data = doc.docs[0].data();\n      setName(data.name);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    if (loading) return console.info('Data is loading, please wait.');\n    if (!user) return navigate('/');\n    fetchUserName();\n  }, [loading, user]);\n\n  return name;\n};\n\nexport default useUsername;\n","import { ThemeProvider } from '@emotion/react';\nimport HailIcon from '@mui/icons-material/Hail';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport {\n  Avatar,\n  Backdrop,\n  Box,\n  Button,\n  CircularProgress,\n  Container,\n  createTheme,\n  IconButton,\n  Menu,\n  MenuItem,\n  SwipeableDrawer,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport AppBar from '@mui/material/AppBar';\nimport React, { useEffect, useState } from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { auth } from '../Firebase';\nimport '../Styles/Navbar.css';\nimport useUsername from '../Utils/useUsername';\n\ndeclare module '@mui/material/styles' {\n  interface Theme {\n    status: {\n      danger: React.CSSProperties['color'];\n    };\n  }\n\n  interface Palette {\n    neutral: Palette['primary'];\n  }\n  interface PaletteOptions {\n    neutral: PaletteOptions['primary'];\n  }\n\n  interface PaletteColor {\n    darker?: string;\n  }\n  interface SimplePaletteColorOptions {\n    darker?: string;\n  }\n  interface ThemeOptions {\n    status: {\n      danger: React.CSSProperties['color'];\n    };\n  }\n}\n\nconst user_pages = [\n  { pageName: 'Home', pageLink: '' },\n  { pageName: 'Dashboard', pageLink: 'dashboard' },\n  { pageName: 'Log List', pageLink: 'loglist' },\n  { pageName: 'Submit Log', pageLink: 'submit' },\n];\n\nconst general_pages = [\n  { pageName: 'Home', pageLink: '' },\n  { pageName: 'About', pageLink: 'about' },\n  { pageName: 'Login', pageLink: 'signin' },\n  { pageName: 'Register', pageLink: 'signup' },\n];\n\nconst theme = createTheme({\n  status: {\n    danger: '#e53e3e',\n  },\n  palette: {\n    primary: {\n      main: '#0971f1',\n      darker: '#053e85',\n    },\n    neutral: {\n      main: '#64748B',\n      contrastText: '#fff',\n    },\n  },\n});\n\nfunction Navbar() {\n  const name = useUsername();\n  const [user, loading] = useAuthState(auth);\n  const [anchorElNav, setAnchorElNav] = useState<null | HTMLElement>(null);\n  const navigate = useNavigate();\n\n  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <AppBar\n        position=\"static\"\n        sx={{\n          padding: '20px 10px 10px 10px',\n          backgroundColor: 'rgba(0,0,0,0)',\n          color: '#2c5491',\n          boxShadow: 0,\n        }}\n      >\n        <Container maxWidth=\"xl\">\n          <Toolbar disableGutters>\n            <HailIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"a\"\n              sx={{\n                mr: 2,\n                display: { xs: 'none', md: 'flex' },\n                fontFamily: 'monospace',\n                fontWeight: 700,\n                letterSpacing: '.3rem',\n                color: 'inherit',\n                textDecoration: 'none',\n              }}\n            >\n              PHVrofits\n            </Typography>\n            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n              {user\n                ? user_pages.map((page) => (\n                    <Link\n                      className=\"navbar-link-desktop\"\n                      to={`/${page.pageLink}`}\n                    >\n                      <MenuItem\n                        key={page.pageName}\n                        onClick={handleCloseNavMenu}\n                      >\n                        <Typography textAlign=\"center\">\n                          {page.pageName}\n                        </Typography>\n                      </MenuItem>\n                    </Link>\n                  ))\n                : general_pages.map((page) => (\n                    <Link\n                      className=\"navbar-link-desktop\"\n                      to={`/${page.pageLink}`}\n                    >\n                      <MenuItem\n                        key={page.pageName}\n                        onClick={handleCloseNavMenu}\n                      >\n                        <Typography textAlign=\"center\">\n                          {page.pageName}\n                        </Typography>\n                      </MenuItem>\n                    </Link>\n                  ))}\n            </Box>\n            <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleOpenNavMenu}\n                color=\"inherit\"\n                sx={{\n                  border: '100px #FAFAFA',\n                  backgroundColor: 'white',\n                  borderRadius: '15px',\n                  boxShadow: `rgba(149, 157, 165, 0.2) 0px 8px 24px`,\n                }}\n              >\n                <MenuIcon />\n              </IconButton>\n              {/* <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorElNav}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'left',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'left',\n                }}\n                open={Boolean(anchorElNav)}\n                onClose={handleCloseNavMenu}\n                sx={{\n                  display: { xs: 'block', md: 'none' },\n                }}\n              >\n                {user\n                  ? user_pages.map((page) => (\n                      <Link className=\"navbar-link\" to={`/${page.pageLink}`}>\n                        <MenuItem\n                          key={page.pageName}\n                          onClick={handleCloseNavMenu}\n                        >\n                          <Typography textAlign=\"center\">\n                            {page.pageName}\n                          </Typography>\n                        </MenuItem>\n                      </Link>\n                    ))\n                  : general_pages.map((page) => (\n                      <Link className=\"navbar-link\" to={`/${page.pageLink}`}>\n                        <MenuItem\n                          key={page.pageName}\n                          onClick={handleCloseNavMenu}\n                        >\n                          <Typography textAlign=\"center\">\n                            {page.pageName}\n                          </Typography>\n                        </MenuItem>\n                      </Link>\n                    ))}\n              </Menu> */}\n              <SwipeableDrawer\n                id=\"menu-appbar\"\n                // anchorEl={anchorElNav}\n                // anchorOrigin={{\n                //   vertical: 'bottom',\n                //   horizontal: 'left',\n                // }}\n                keepMounted\n                // transformOrigin={{\n                //   vertical: 'top',\n                //   horizontal: 'left',\n                // }}\n                open={Boolean(anchorElNav)}\n                onOpen={handleOpenNavMenu}\n                onClose={handleCloseNavMenu}\n                sx={{\n                  display: { xs: 'block', md: 'none' },\n                }}\n              >\n                {user\n                  ? user_pages.map((page) => (\n                      <Link className=\"navbar-link\" to={`/${page.pageLink}`}>\n                        <MenuItem\n                          key={page.pageName}\n                          onClick={handleCloseNavMenu}\n                        >\n                          <Typography textAlign=\"center\">\n                            {page.pageName}\n                          </Typography>\n                        </MenuItem>\n                      </Link>\n                    ))\n                  : general_pages.map((page) => (\n                      <Link className=\"navbar-link\" to={`/${page.pageLink}`}>\n                        <MenuItem\n                          key={page.pageName}\n                          onClick={handleCloseNavMenu}\n                        >\n                          <Typography textAlign=\"center\">\n                            {page.pageName}\n                          </Typography>\n                        </MenuItem>\n                      </Link>\n                    ))}\n              </SwipeableDrawer>\n            </Box>\n            <HailIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\n            <Typography\n              variant=\"h5\"\n              noWrap\n              component=\"a\"\n              href=\"\"\n              sx={{\n                display: { xs: 'flex', md: 'none' },\n                flexGrow: 1,\n                fontFamily: 'monospace',\n                fontWeight: 700,\n                letterSpacing: '.1rem',\n                color: 'inherit',\n                textDecoration: 'none',\n                fontSize: '1.3rem',\n              }}\n            >\n              PHVrofits\n            </Typography>\n            {user ? (\n              <Box sx={{ flexGrow: 0 }}>\n                {/* <Tooltip title=\"Open settings\">\n                  <Link className=\"navbar-link\" to={`/account`}>\n                    <IconButton sx={{ p: 0 }}>\n                      <Avatar alt={name} src=\"/static/images/avatar/2.jpg\" />\n                    </IconButton>\n                  </Link>\n                </Tooltip> */}\n                <Tooltip title=\"Add Log\">\n                  <Link className=\"navbar-link\" to={`/submit`}>\n                    <IconButton\n                      sx={{\n                        padding: '12px',\n                        backgroundColor: '#2c5491',\n                        borderRadius: '15px',\n                        boxShadow: `rgba(149, 157, 165, 0.5) 0px 8px 24px`,\n                        color: 'white',\n                      }}\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  </Link>\n                </Tooltip>\n              </Box>\n            ) : (\n              <Button\n                sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }}\n                color=\"inherit\"\n                onClick={() => navigate('/signin')}\n              >\n                Login\n              </Button>\n            )}\n          </Toolbar>\n        </Container>\n      </AppBar>\n    </ThemeProvider>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\n\nconst Home = () => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n    >\n      <img src=\"work-in-progress.png\" alt=\"Work in progress\" />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst About = () => {\n  return <div>About</div>;\n};\n\nexport default About;\n","import React, { useEffect, useState } from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { auth, logInWithEmailAndPassword } from '../../Firebase/firebase';\nimport './Styles/styles.css';\n\nconst SignIn = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (loading) {\n      // maybe trigger a loading screen\n      return;\n    }\n    if (user) navigate('/dashboard');\n  }, [user, loading]);\n\n  return (\n    <div className=\"login\">\n      <div className=\"login__container\">\n        <input\n          type=\"text\"\n          className=\"login__textBox\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <input\n          type=\"password\"\n          className=\"login__textBox\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n        />\n        <button\n          className=\"login__btn\"\n          onClick={() => logInWithEmailAndPassword(email, password)}\n        >\n          Login\n        </button>\n        <div>\n          <Link to=\"/reset\">Forgot Password</Link>\n        </div>\n        <div>\n          Don't have an account? <Link to=\"/signup\">Register</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn;\n","import {\n  Button,\n  FormControl,\n  Input,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Select,\n  SelectChangeEvent,\n  TextField,\n} from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { Link, useNavigate } from 'react-router-dom';\nimport {\n  auth,\n  registerWithEmailAndPassword,\n  signInWithGoogle,\n} from '../../Firebase/firebase';\nimport './Styles/styles.css';\n\nfunction Register() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [carModel, setCarModel] = useState('');\n  const [fuelEfficiency, setFuelEfficiency] = useState('');\n  const [petrolStation, setPetrolStation] = useState('');\n  const [fuelGrade, setFuelGrade] = useState('');\n\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useNavigate();\n  const register = () => {\n    if (\n      [\n        name,\n        email,\n        password,\n        carModel,\n        fuelEfficiency,\n        petrolStation,\n        fuelGrade,\n      ].find((ele) => ele === '') !== undefined\n    )\n      alert('Incomplete form');\n    else {\n      registerWithEmailAndPassword(\n        name,\n        email,\n        password,\n        carModel,\n        fuelEfficiency,\n        petrolStation,\n        fuelGrade\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (loading) return;\n    if (user) navigate('/dashboard');\n  }, [user, loading]);\n\n  return (\n    <div className=\"register\">\n      <div className=\"register__container\">\n        <TextField\n          id=\"name\"\n          label=\"Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"John Appleseed\"\n          className=\"register_input\"\n          required\n          variant=\"standard\"\n          sx={{ marginBottom: '7px' }}\n        />\n        <TextField\n          id=\"email\"\n          label=\"E-mail Address\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"abc@xyz.com\"\n          className=\"register_input\"\n          required\n          sx={{ marginBottom: '7px' }}\n          variant=\"standard\"\n        />\n        <TextField\n          id=\"password\"\n          variant=\"standard\"\n          label=\"Password\"\n          type=\"password\"\n          required\n          className=\"register_input\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          sx={{ marginBottom: '7px' }}\n          placeholder=\"Password\"\n        />\n        <TextField\n          id=\"car-model\"\n          variant=\"standard\"\n          label=\"Car Model\"\n          required\n          className=\"register_input\"\n          value={carModel}\n          onChange={(e) => setCarModel(e.target.value)}\n          sx={{ marginBottom: '7px' }}\n          placeholder=\"Mazda 3\"\n        />\n        <TextField\n          id=\"fuel-efficiency\"\n          variant=\"standard\"\n          label=\"Fuel Efficiency\"\n          required\n          className=\"register_input\"\n          value={fuelEfficiency}\n          onChange={(e) => setFuelEfficiency(e.target.value)}\n          sx={{ marginBottom: '7px' }}\n          placeholder=\"8.3\"\n        />\n        <FormControl\n          variant=\"standard\"\n          sx={{ marginTop: 5, marginBottom: '7px', textAlign: 'left' }}\n        >\n          <InputLabel id=\"demo-simple-select-standard-label\">\n            Petrol Station *\n          </InputLabel>\n          <Select\n            variant=\"standard\"\n            required\n            // labelId=\"petrol-station\"\n            // label=\"Petrol Station\"\n            value={petrolStation}\n            onChange={(e: SelectChangeEvent<string>) =>\n              setPetrolStation(e.target.value)\n            }\n          >\n            <MenuItem value=\"caltex\">Caltex</MenuItem>\n            <MenuItem value=\"esso\">Esso</MenuItem>\n            <MenuItem value=\"shell\">Shell</MenuItem>\n            <MenuItem value=\"sinopec\">Sinopec</MenuItem>\n            <MenuItem value=\"spc\">SPC</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl\n          variant=\"standard\"\n          sx={{ marginTop: 5, marginBottom: '20px', textAlign: 'left' }}\n        >\n          <InputLabel id=\"demo-simple-select-standard-label\">\n            Fuel Grade *\n          </InputLabel>\n          <Select\n            variant=\"standard\"\n            required\n            label=\"Fuel Grade\"\n            labelId=\"fuel-grade\"\n            value={fuelGrade}\n            onChange={(e: SelectChangeEvent<string>) =>\n              setFuelGrade(e.target.value)\n            }\n          >\n            <MenuItem value=\"92\">92</MenuItem>\n            <MenuItem value=\"95\">95</MenuItem>\n            <MenuItem value=\"98\">98</MenuItem>\n            <MenuItem value=\"premium\">Premium</MenuItem>\n            <MenuItem value=\"diesel\">Diesel</MenuItem>\n          </Select>\n        </FormControl>\n        <Button className=\"register__btn\" onClick={register} variant=\"outlined\">\n          Register\n        </Button>\n        <div>\n          Already have an account? <Link to=\"/signin\">Login</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Register;\n","import React, { useEffect, useState } from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { auth, sendPasswordReset } from '../../Firebase';\nimport './Styles/styles.css';\nfunction Reset() {\n  const [email, setEmail] = useState('');\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (loading) return;\n    if (user) navigate('/dashboard');\n  }, [user, loading]);\n  return (\n    <div className=\"reset\">\n      <div className=\"reset__container\">\n        <input\n          type=\"text\"\n          className=\"reset__textBox\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <button className=\"reset__btn\" onClick={() => sendPasswordReset(email)}>\n          Send password reset email\n        </button>\n        <div>\n          Don't have an account? <Link to=\"/register\">Register</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Reset;\n","import React, { useEffect, useState } from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useNavigate } from 'react-router-dom';\nimport './Styles/styles.css';\nimport { auth, db, logout } from '../../../Firebase';\nimport { query, collection, getDocs, where } from 'firebase/firestore';\nimport useUsername from '../../../Utils/useUsername';\n\nconst AccountPage = () => {\n  const [user, loading, error] = useAuthState(auth);\n  const name = useUsername();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (loading) return;\n    if (!user) return navigate('/');\n  }, [user, loading]);\n\n  return (\n    <div className=\"account\">\n      <div className=\"account__container\">\n        Logged in as\n        <div>{name}</div>\n        <div>{user && user.email}</div>\n        <button className=\"account__btn\" onClick={logout}>\n          Logout\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default AccountPage;\n","import { collection, getDocs, query, where } from 'firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useNavigate } from 'react-router-dom';\nimport { auth, db } from '../Firebase';\nimport { LogInfo } from './types';\n\nconst useLogData = () => {\n  const [user, loading, error] = useAuthState(auth);\n  const [logData, setLogData] = useState<Array<LogInfo>>([]);\n  const navigate = useNavigate();\n\n  const fetchLogData = async () => {\n    try {\n      const q1 = query(\n        collection(db, 'users'),\n        where('uid', '==', user && user.uid)\n      );\n      const doc = (await getDocs(q1)).docs[0];\n      const id = doc.id;\n\n      const q2 = query(collection(db, 'users/' + id + '/logs'));\n      const logData = (await getDocs(q2)).docs.map((doc) => ({\n        ...doc.data(),\n        date: new Date(doc.data().date),\n        id: doc.id,\n      })) as Array<LogInfo>;\n      setLogData(logData);\n    } catch (err) {\n      console.error(err);\n      alert('An error occured while fetching user data!');\n    }\n  };\n\n  useEffect(() => {\n    if (loading) return console.info('Data is loading, please wait.');\n    if (!user) return navigate('/');\n    fetchLogData();\n  }, [loading, user]);\n\n  return logData;\n};\n\nexport default useLogData;\n","import React from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useNavigate } from 'react-router-dom';\nimport { auth, logout } from '../../../Firebase';\nimport useLogData from '../../../Utils/useLogData';\nimport useUsername from '../../../Utils/useUsername';\nimport './Styles/styles.css';\n\nfunction Dashboard() {\n  const [user] = useAuthState(auth);\n  const name = useUsername();\n  const logs = useLogData();\n\n  return (\n    <div\n      className=\"dashboard\"\n      style={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n    >\n      <img src=\"work-in-progress.png\" alt=\"Work in progress\" />\n    </div>\n  );\n}\nexport default Dashboard;\n","import React from 'react';\nimport {\n  Alert,\n  AlertColor,\n  Backdrop,\n  Box,\n  Button,\n  CircularProgress,\n  Grid,\n  InputAdornment,\n  Snackbar,\n  TextField,\n} from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { submitEntryToFirebase } from '../../../Firebase/firebase';\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport './Styles/styles.css';\nimport moment from 'moment';\nimport { LocalizationProvider } from '@mui/x-date-pickers';\nimport useLogData from '../../../Utils/useLogData';\nimport './Styles/styles.css';\nimport { Link } from 'react-router-dom';\n\nconst SubmitLogPage = () => {\n  const [gojekEarnings, setGojekEarnings] = useState<string>('');\n  const [tadaEarnings, setTadaEarnings] = useState<string>('');\n  const [grabEarnings, setGrabEarnings] = useState<string>('');\n  const [rydeEarnings, setRydeEarnings] = useState<string>('');\n  const [date, setDate] = useState<moment.Moment>(moment());\n  const [distance, setDistance] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [snackbar, setSnackbar] = useState<boolean>(false);\n  const [snackbarType, setSnackbarType] = useState<AlertColor>('success');\n  const [newlyLoggedDates, setNewlyLoggedDates] = useState<string[]>([]);\n  const [submitStatus, setSubmitStatus] = useState<boolean>(false);\n  const loggedDates = useLogData().reduce((a, b) => {\n    return [...a, getFormattedDate(b.date)];\n  }, [] as string[]);\n\n  const submitEntry = async () => {\n    setIsLoading(true);\n    // returns true if successfully added log, false if not - snackbar message triggered accordingly\n    await submitEntryToFirebase(\n      gojekEarnings !== '' ? parseFloat(gojekEarnings) : 0,\n      tadaEarnings !== '' ? parseFloat(tadaEarnings) : 0,\n      grabEarnings !== '' ? parseFloat(grabEarnings) : 0,\n      rydeEarnings !== '' ? parseFloat(rydeEarnings) : 0,\n      date,\n      distance !== '' ? parseFloat(distance) : 0\n    )\n      .then((res) => {\n        setSnackbar(true);\n        setSubmitStatus(res);\n      })\n      .finally(() => {\n        setIsLoading(false);\n        setSubmitStatus(false);\n      });\n\n    setGojekEarnings('');\n    setRydeEarnings('');\n    setGrabEarnings('');\n    setTadaEarnings('');\n    setDistance('');\n  };\n\n  useEffect(() => {\n    if (submitStatus) {\n      setSnackbarType('success');\n      setNewlyLoggedDates((state) => [...state, date.format('DD/MM/YYYY')]);\n    } else {\n      setSnackbarType('error');\n    }\n  }, [submitStatus]);\n\n  console.log(newlyLoggedDates);\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterMoment}>\n      <div>\n        <div className=\"submit-log-form\">\n          <h1> Submit Your Log </h1>\n          <Box>\n            <Grid direction=\"column\" spacing={2} container>\n              <Grid item>\n                <DesktopDatePicker\n                  minDate={moment(new Date('June 08, 2021 00:00:00'))}\n                  disableFuture\n                  label=\"Date\"\n                  inputFormat=\"DD/MM/yyyy\"\n                  value={date}\n                  onChange={(date) => date && setDate(date)}\n                  renderInput={(params) => <TextField {...params} fullWidth />}\n                />\n              </Grid>\n              {[...loggedDates, ...newlyLoggedDates].includes(\n                date.format('DD/MM/YYYY')\n              ) && (\n                <Alert\n                  severity=\"error\"\n                  className=\"alert_message\"\n                  variant=\"outlined\"\n                >\n                  Date already exists. Please choose another date or delete\n                  current entry {<Link to={`/loglist`}> here</Link>}.\n                </Alert>\n              )}\n              <Grid item>\n                <TextField\n                  type=\"number\"\n                  id=\"gojek-earnings\"\n                  label=\"Gojek Earnings\"\n                  onChange={(e) => setGojekEarnings(e.target.value)}\n                  value={gojekEarnings}\n                  placeholder={'0'}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">$</InputAdornment>\n                    ),\n                  }}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  type=\"number\"\n                  id=\"grab-earnings\"\n                  label=\"Grab Earnings\"\n                  placeholder={'0'}\n                  onChange={(e) => setGrabEarnings(e.target.value)}\n                  value={grabEarnings}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">$</InputAdornment>\n                    ),\n                  }}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  type=\"number\"\n                  id=\"tada-earnings\"\n                  label=\"Tada Earnings\"\n                  placeholder={'0'}\n                  onChange={(e) => setTadaEarnings(e.target.value)}\n                  value={tadaEarnings}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">$</InputAdornment>\n                    ),\n                  }}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  type=\"number\"\n                  id=\"ryde-earnings\"\n                  placeholder={'0'}\n                  label=\"Ryde Earnings\"\n                  onChange={(e) => setRydeEarnings(e.target.value)}\n                  value={rydeEarnings}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">$</InputAdornment>\n                    ),\n                  }}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  required\n                  id=\"distance\"\n                  label=\"Distance\"\n                  onChange={(e) => setDistance(e.target.value)}\n                  fullWidth\n                  type=\"number\"\n                  value={distance}\n                  placeholder={'0'}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">km</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n          <Button\n            variant=\"contained\"\n            style={{\n              margin: '15px 0 7px 0',\n              color: 'white',\n              backgroundColor: '216fb3',\n            }}\n            onClick={submitEntry}\n            disabled={[...loggedDates, ...newlyLoggedDates].includes(\n              date.format('DD/MM/YYYY')\n            )}\n          >\n            Submit Entry\n          </Button>\n        </div>\n        {isLoading && (\n          <Backdrop\n            sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n            open={isLoading}\n          >\n            <CircularProgress color=\"inherit\" />\n          </Backdrop>\n        )}\n        <Snackbar\n          open={snackbar}\n          autoHideDuration={6000}\n          onClose={() => setSnackbar(false)}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        >\n          <Alert\n            onClose={() => setSnackbar(false)}\n            severity={snackbarType}\n            sx={{ width: '100%' }}\n          >\n            {snackbarType === 'success'\n              ? 'Log successfully added.'\n              : 'Error uploading log. Please try again later or inform system administrator.'}\n          </Alert>\n        </Snackbar>\n      </div>\n    </LocalizationProvider>\n  );\n};\n\nexport default SubmitLogPage;\n\nconst getFormattedDate = (date: Date) => {\n  const yyyy = date.getFullYear();\n  let mm = (date.getMonth() + 1) as unknown as string; // Months start at 0!\n  let dd = date.getDate() as unknown as string;\n\n  if (dd < '10') dd = '0' + dd;\n  if (mm < '10') mm = '0' + mm;\n\n  const formattedDate = dd + '/' + mm + '/' + yyyy;\n  return formattedDate;\n};\n","import React, { useState } from 'react';\nimport 'react-day-picker/dist/style.css';\nimport { addDays, format } from 'date-fns';\nimport { DateRange, DayPicker } from 'react-day-picker';\n\nconst pastMonth = new Date();\n\ninterface DateRangePickerProps {\n  dateRange: DateRange | undefined;\n  handleDateRange: React.Dispatch<React.SetStateAction<DateRange | undefined>>;\n}\n\nexport default function DateRangePicker(props: DateRangePickerProps) {\n  const { dateRange, handleDateRange } = props;\n\n  return (\n    <DayPicker\n      mode=\"range\"\n      defaultMonth={pastMonth}\n      selected={dateRange}\n      onSelect={handleDateRange}\n    />\n  );\n}\n","import { Slide } from '@mui/material';\nimport { TransitionProps } from '@mui/material/transitions';\nimport React, { forwardRef, ReactElement, Ref } from 'react';\n\nconst Transition = forwardRef(function Transition(\n  props: TransitionProps & {\n    children: ReactElement;\n  },\n  ref: Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default Transition;\n","import { Box } from '@mui/material';\nimport React from 'react';\n\ninterface SummaryBoxProps {\n  children: React.ReactNode;\n  color?: string;\n}\nconst SummaryBox = (props: SummaryBoxProps) => {\n  const { children, color } = props;\n  return (\n    <Box\n      sx={{\n        padding: '20px',\n        display: 'flex',\n        border: '1px solid rgba(224,224,224,1)',\n        borderRadius: '15px',\n        margin: '0px 0 5px 0',\n        background: color,\n        boxShadow: 'rgba(100, 100, 111, 0.2) 0px 7px 29px 0px',\n        color: color ? 'white' : 'black',\n        fontFamily: 'sans-serif',\n      }}\n    >\n      {children}\n    </Box>\n  );\n};\nexport default SummaryBox;\n","import React from 'react';\nimport { Grid } from '@mui/material';\nimport 'react-day-picker/dist/style.css';\nimport SummaryBox from './SummaryBox';\nimport PriceCheckIcon from '@mui/icons-material/PriceCheck';\nimport ReceiptIcon from '@mui/icons-material/Receipt';\nimport LocalGasStationIcon from '@mui/icons-material/LocalGasStation';\nimport GarageIcon from '@mui/icons-material/Garage';\ninterface SummaryProps {\n  totalTotalProfit: number;\n  totalTotalRevenue: number;\n  totalPetrolCosts: number;\n  totalDistance: number;\n}\n\nconst Summary = (props: SummaryProps) => {\n  const {\n    totalTotalProfit,\n    totalTotalRevenue,\n    totalPetrolCosts,\n    totalDistance,\n  } = props;\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={6}>\n        <SummaryBox color=\"#003f5c\">\n          <Grid container direction=\"row\" justifyContent={'space-around'}>\n            <Grid item xs={3}>\n              <PriceCheckIcon fontSize=\"large\" />\n            </Grid>\n            <Grid container item xs={8} direction=\"row\">\n              <Grid item xs={12}>\n                <span\n                  style={{\n                    fontWeight: 600,\n                    fontSize: '18px',\n                    marginLeft: '5px',\n                  }}\n                >\n                  ${Math.round(totalTotalProfit * 100) / 100}\n                </span>\n              </Grid>\n              <Grid item xs={12}>\n                <span\n                  style={{\n                    fontWeight: 300,\n                    fontSize: '14px',\n                    marginLeft: '5px',\n                  }}\n                >\n                  Total Profits\n                </span>\n              </Grid>\n            </Grid>\n          </Grid>\n        </SummaryBox>\n      </Grid>\n      <Grid item xs={6}>\n        <SummaryBox color=\"#7a5195\">\n          <Grid container direction=\"row\" justifyContent={'space-around'}>\n            <Grid item xs={3}>\n              <ReceiptIcon fontSize=\"large\" />\n            </Grid>\n            <Grid container item xs={8} direction=\"row\">\n              <Grid item xs={12}>\n                <span\n                  style={{\n                    fontWeight: 600,\n                    fontSize: '18px',\n                    marginLeft: '5px',\n                  }}\n                >\n                  ${Math.round(totalTotalRevenue * 100) / 100}\n                </span>\n              </Grid>\n              <Grid item xs={12}>\n                <span\n                  style={{\n                    fontWeight: 300,\n                    fontSize: '12px',\n                    marginLeft: '5px',\n                  }}\n                >\n                  Total Revenue\n                </span>\n              </Grid>\n            </Grid>\n          </Grid>\n        </SummaryBox>\n      </Grid>\n      <Grid item xs={6}>\n        <SummaryBox color=\"#ef5675\">\n          <Grid container direction=\"row\" justifyContent={'space-around'}>\n            <Grid item xs={3}>\n              <LocalGasStationIcon fontSize=\"large\" />\n            </Grid>\n            <Grid container item xs={8} direction=\"row\">\n              <Grid item xs={12}>\n                <span\n                  style={{\n                    fontWeight: 600,\n                    fontSize: '18px',\n                    marginLeft: '5px',\n                  }}\n                >\n                  ${Math.round(totalPetrolCosts * 100) / 100}\n                </span>\n              </Grid>\n              <Grid item xs={12}>\n                <span\n                  style={{\n                    fontWeight: 300,\n                    fontSize: '12px',\n                    marginLeft: '5px',\n                  }}\n                >\n                  Total Costs\n                </span>\n              </Grid>\n            </Grid>\n          </Grid>\n        </SummaryBox>\n      </Grid>\n      <Grid item xs={6}>\n        <SummaryBox color=\"#ffa600\">\n          <Grid container direction=\"row\" justifyContent={'space-around'}>\n            <Grid item xs={3}>\n              <GarageIcon fontSize=\"large\" />\n            </Grid>\n            <Grid container item xs={8} direction=\"row\">\n              <Grid item xs={12}>\n                <span\n                  style={{\n                    fontWeight: 600,\n                    fontSize: '18px',\n                    marginLeft: '5px',\n                  }}\n                >\n                  ${Math.round(totalDistance * 100) / 100}\n                </span>\n              </Grid>\n              <Grid item xs={12}>\n                <span\n                  style={{\n                    fontWeight: 300,\n                    fontSize: '12px',\n                    marginLeft: '5px',\n                  }}\n                >\n                  Total Distance\n                </span>\n              </Grid>\n            </Grid>\n          </Grid>\n        </SummaryBox>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Summary;\n","import { Box } from '@mui/material';\nimport React from 'react';\nimport { DateRange } from 'react-day-picker';\n\ninterface HeaderProps {\n  dateRange?: DateRange;\n  totalResults: number;\n}\n\nconst Header = (props: HeaderProps) => {\n  const { dateRange, totalResults } = props;\n  return (\n    <Box\n      sx={{\n        padding: '7px 7px 7px 14px',\n        display: 'flex',\n        border: '1px solid rgba(224,224,224,1)',\n        borderRadius: '15px',\n        margin: '5px 0 15px 0',\n        boxShadow: 'rgba(100, 100, 111, 0.3) 0px 7px 29px 0px',\n        height: '20px',\n        background: '#2995F7',\n        fontSize: '14px',\n        color: 'white',\n      }}\n    >\n      {dateRange ? (\n        <>\n          Displaying {totalResults} logs from{' '}\n          {dateRange.from && dateRange.from.toLocaleDateString()} to{' '}\n          {dateRange.to ? dateRange.to.toLocaleDateString() : 'today'}\n        </>\n      ) : (\n        <> Displaying all {totalResults} logs </>\n      )}\n    </Box>\n  );\n};\n\ninterface Header {\n  dateFiltered: boolean;\n}\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport useLogData from '../../../Utils/useLogData';\nimport { DataGrid, GridColDef, GridRenderCellParams } from '@mui/x-data-grid';\nimport {\n  AppBar,\n  Box,\n  Button,\n  Dialog,\n  FormControlLabel,\n  FormGroup,\n  Grid,\n  InputAdornment,\n  Switch,\n  TextField,\n  Toolbar,\n  Typography,\n} from '@mui/material';\nimport { editEntryOnFirebase } from '../../../Firebase/firebase';\nimport EditIcon from '@mui/icons-material/Edit';\nimport InfoIcon from '@mui/icons-material/Info';\nimport CloseIcon from '@mui/icons-material/Close';\nimport IconButton from '@mui/material/IconButton';\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\nimport { orderBy } from 'lodash';\nimport { LogInfo } from '../../../Utils/types';\nimport DateRangePicker from '../../../Components/DateRangePicker';\nimport { DateRange } from 'react-day-picker';\nimport 'react-day-picker/dist/style.css';\nimport Transition from './Components/Transition';\nimport { format } from 'date-fns';\nimport Summary from './Components/Summary';\nimport Header from './Components/Header';\n\nconst LogListPage = () => {\n  const [hide, setHide] = useState(true);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedLog, setSelectedLog] = useState<LogInfo>({} as LogInfo);\n  const [dateFilterDialog, setDateFilterDialog] = useState(false);\n  const [dateFilter, setDateFilter] = useState<DateRange | undefined>(\n    undefined\n  );\n  const [customDate, setCustomDate] = useState(false);\n  const [logData, setLogData] = useState<LogInfo[]>(\n    orderBy(useLogData(), ['date'], ['desc'])\n  );\n\n  const data = useLogData();\n  useEffect(() => setLogData(orderBy(data, ['date'], ['desc'])), [data]);\n\n  const columns: GridColDef[] = [\n    { field: 'date', headerName: 'Date' },\n    { field: 'distance', headerName: 'Distance (km)', width: 110 },\n    { field: 'gojekEarnings', headerName: 'Gojek ($)', hide, width: 80 },\n    { field: 'grabEarnings', headerName: 'Grab ($)', hide, width: 70 },\n    { field: 'rydeEarnings', headerName: 'Ryde ($)', hide, width: 70 },\n    { field: 'tadaEarnings', headerName: 'Tada ($)', hide, width: 70 },\n    { field: 'totalRevenue', headerName: 'Revenue ($)', hide, width: 100 },\n    { field: 'petrolCost', headerName: 'Cost ($)', hide, width: 70 },\n    { field: 'totalProfit', headerName: 'Profit ($)', width: 70 },\n    {\n      field: 'Edit Action',\n      headerName: 'Edit',\n      width: 50,\n      renderCell: (params) => renderDialog(params),\n    },\n  ];\n\n  const renderDialog = (params: GridRenderCellParams<any, any, any>) => {\n    return (\n      <EditIcon fontSize=\"small\" onClick={() => handleEditDialog(params.row)} />\n    );\n  };\n\n  const DateRangeDisplay = () => {\n    return (\n      <Box component=\"div\" sx={{ display: 'inline' }}>\n        <TextField\n          sx={{ width: '40%', margin: '15px 10px' }}\n          disabled\n          value={\n            dateFilter && dateFilter.from\n              ? format(dateFilter.from, 'dd-MM-yyyy')\n              : 'Start Date'\n          }\n        />\n        <TextField\n          sx={{ width: '40%', margin: '15px 10px' }}\n          disabled\n          value={\n            dateFilter && dateFilter.to\n              ? format(dateFilter.to, 'dd-MM-yyyy')\n              : 'End Date'\n          }\n        />\n      </Box>\n    );\n  };\n\n  const ActionBar = () => {\n    return (\n      <Grid container direction=\"row\" justifyContent={'space-between'}>\n        <Grid item>\n          <Button\n            startIcon={<CalendarMonthIcon />}\n            onClick={() => setDateFilterDialog((state) => !state)}\n          >\n            Date Filter\n          </Button>\n          {/* TODO Bug Fix: dialog keeps exiting custom date selection after selecting a date */}\n          {/* <DateFilter\n            filteredDate={dateFilter}\n            handleDateRange={setDateFilter}\n            handleFilterDateDialog={setDateFilterDialog}\n            open={dateFilterDialog}\n          /> */}\n          <Dialog\n            fullScreen\n            open={dateFilterDialog}\n            onClose={() => setDateFilterDialog(false)}\n            transitionDuration={0}\n          >\n            {!customDate ? (\n              <>\n                <AppBar sx={{ position: 'relative' }}>\n                  <Toolbar>\n                    <IconButton\n                      edge=\"start\"\n                      color=\"inherit\"\n                      onClick={() => setDateFilterDialog((state) => !state)}\n                      aria-label=\"close\"\n                    >\n                      <CloseIcon />\n                    </IconButton>\n                    <Typography\n                      sx={{ ml: 2, flex: 1 }}\n                      variant=\"h6\"\n                      component=\"div\"\n                    >\n                      Set Date Filter\n                    </Typography>\n                    <Button\n                      autoFocus\n                      color=\"inherit\"\n                      onClick={() => setDateFilter(undefined)}\n                    >\n                      RESET ALl\n                    </Button>\n                  </Toolbar>\n                </AppBar>\n                <DateRangeDisplay />\n                <Button\n                  variant=\"contained\"\n                  style={{ margin: '10px 15px' }}\n                  onClick={() => setCustomDate((state) => !state)}\n                >\n                  Custom: Select Date\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  style={{ margin: '10px 15px' }}\n                  onClick={() => setDateFilterDialog((state) => !state)}\n                >\n                  APPLY FILTER\n                </Button>\n                <Button\n                  variant=\"outlined\"\n                  style={{ margin: '10px 15px' }}\n                  onClick={() => setDateFilterDialog((state) => !state)}\n                >\n                  CLOSE\n                </Button>\n              </>\n            ) : (\n              <>\n                <AppBar sx={{ position: 'relative' }}>\n                  <Toolbar>\n                    <IconButton\n                      edge=\"start\"\n                      color=\"inherit\"\n                      onClick={() => setCustomDate((state) => !state)}\n                      aria-label=\"close\"\n                    >\n                      <CloseIcon />\n                    </IconButton>\n                    <Typography\n                      sx={{ ml: 2, flex: 1 }}\n                      variant=\"h6\"\n                      component=\"div\"\n                    >\n                      Custom Date Range\n                    </Typography>\n                    <Button\n                      autoFocus\n                      color=\"inherit\"\n                      onClick={() => {\n                        setDateFilterDialog((state) => !state);\n                        setCustomDate((state) => !state);\n                      }}\n                    >\n                      Save\n                    </Button>\n                  </Toolbar>\n                </AppBar>\n                <DateRangeDisplay />\n                <DateRangePicker\n                  dateRange={dateFilter}\n                  handleDateRange={setDateFilter}\n                />\n              </>\n            )}\n          </Dialog>\n        </Grid>\n        <Grid item>\n          <Button\n            endIcon={<InfoIcon />}\n            onClick={() => setHide((state) => !state)}\n          >\n            Expand Table\n          </Button>\n          {/* <FormGroup>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={!hide}\n                  onClick={() => setHide((state) => !state)}\n                />\n              }\n              label=\"Details\"\n              labelPlacement=\"start\"\n            />\n          </FormGroup> */}\n        </Grid>\n      </Grid>\n    );\n  };\n\n  const handleEditDialog = (currentLog?: LogInfo) => {\n    // If we are opening the edit dialog - select a log\n    if (!openDialog && currentLog) {\n      setSelectedLog(currentLog);\n    } else if (!currentLog && openDialog) {\n      // If we are closing the dialog\n      setLogData((state) => {\n        const updatedData = state.map((mappedLog) => {\n          if (mappedLog.id === selectedLog.id) {\n            const petrolCost =\n              mappedLog.discountedLitrePetrol *\n              (selectedLog.distance / 100) *\n              selectedLog.fuelEfficiency;\n            const totalRevenue =\n              selectedLog.gojekEarnings +\n              selectedLog.grabEarnings +\n              selectedLog.rydeEarnings +\n              selectedLog.rydeEarnings;\n            const log = {\n              ...selectedLog,\n              petrolCost,\n              totalProfit: totalRevenue - petrolCost,\n              date: mappedLog.date,\n              totalRevenue,\n            };\n            editEntryOnFirebase(log);\n            return log;\n          } else {\n            return mappedLog;\n          }\n        });\n        return updatedData;\n      });\n    }\n\n    // set dialog from Open to Close or vice-versa\n    setOpenDialog((state) => !state);\n  };\n\n  const handleSelectDateRange = (selectedDates: { from: Date; to: Date }) => {\n    setDateFilter(selectedDates);\n  };\n\n  const logDataFiltered = logData.filter((log) => {\n    if (dateFilter) {\n      if (dateFilter.from && dateFilter.to) {\n        return (\n          log.date >=\n            new Date(new Date(dateFilter.from).setHours(0, 0, 0, 0)) &&\n          log.date < new Date(new Date(dateFilter.to).setHours(23, 59, 59, 999))\n        );\n      }\n      if (dateFilter.from) {\n        return (\n          log.date >= new Date(new Date(dateFilter.from).setHours(0, 0, 0, 0))\n        );\n      }\n      if (dateFilter.to) {\n        return (\n          log.date < new Date(new Date(dateFilter.to).setHours(23, 59, 59, 999))\n        );\n      }\n    }\n    return log;\n  });\n\n  const {\n    totalTotalRevenue,\n    totalTotalProfit,\n    totalPetrolCosts,\n    totalDistance,\n  } = logDataFiltered.reduce(\n    (a, b) => ({\n      totalTotalProfit: a.totalTotalProfit + b.totalProfit,\n      totalTotalRevenue: a.totalTotalRevenue + b.totalRevenue,\n      totalPetrolCosts: a.totalPetrolCosts + b.petrolCost,\n      totalDistance: a.totalDistance + b.distance,\n    }),\n    {\n      totalTotalProfit: 0,\n      totalTotalRevenue: 0,\n      totalPetrolCosts: 0,\n      totalDistance: 0,\n    }\n  );\n\n  return (\n    <div style={{ margin: '20px' }}>\n      <ActionBar />\n      <Header dateRange={dateFilter} totalResults={logDataFiltered.length} />\n      <Summary\n        totalDistance={totalDistance}\n        totalPetrolCosts={totalPetrolCosts}\n        totalTotalProfit={totalTotalProfit}\n        totalTotalRevenue={totalTotalRevenue}\n      />\n      <DataGrid\n        autoHeight\n        style={{\n          background: 'white',\n          borderRadius: '10px',\n          marginTop: '10px',\n          boxShadow: 'rgba(100, 100, 111, 0.2) 0px 7px 29px 0px',\n        }}\n        rowsPerPageOptions={[10, 25, 50, 100]}\n        componentsProps={{\n          footer: {},\n        }}\n        rows={logDataFiltered.map((log) => ({\n          ...log,\n          date: log.date.toLocaleDateString(),\n          totalProfit: Math.round(log.totalProfit * 100) / 100,\n          totalRevenue: Math.round(log.totalRevenue * 100) / 100,\n          petrolCost: Math.round(log.petrolCost * 100) / 100,\n        }))}\n        columns={columns}\n      />\n      <Dialog\n        fullScreen\n        open={openDialog}\n        onClose={() => setOpenDialog(false)}\n        TransitionComponent={Transition}\n      >\n        <AppBar sx={{ position: 'relative' }}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={() => setOpenDialog(false)}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\n              Edit Log\n            </Typography>\n            <Button\n              autoFocus\n              color=\"inherit\"\n              onClick={() => handleEditDialog()}\n            >\n              save\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Box sx={{ padding: '30px 20px 20px 20px' }}>\n          <Grid direction=\"column\" spacing={2} container>\n            <Grid item>\n              <TextField\n                label=\"Date\"\n                disabled\n                value={selectedLog.date}\n                fullWidth\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                type=\"number\"\n                id=\"gojek-earnings\"\n                label=\"Gojek Earnings\"\n                value={selectedLog.gojekEarnings}\n                placeholder={'0'}\n                onChange={(e) =>\n                  setSelectedLog((state) => ({\n                    ...state,\n                    gojekEarnings: parseFloat(e.target.value),\n                  }))\n                }\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">$</InputAdornment>\n                  ),\n                }}\n                fullWidth\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                type=\"number\"\n                id=\"grab-earnings\"\n                label=\"Grab Earnings\"\n                placeholder={'0'}\n                onChange={(e) =>\n                  setSelectedLog((state) => ({\n                    ...state,\n                    grabEarnings: parseFloat(e.target.value),\n                  }))\n                }\n                value={selectedLog.grabEarnings}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">$</InputAdornment>\n                  ),\n                }}\n                fullWidth\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                type=\"number\"\n                id=\"tada-earnings\"\n                label=\"Tada Earnings\"\n                placeholder={'0'}\n                onChange={(e) =>\n                  setSelectedLog((state) => ({\n                    ...state,\n                    tadaEarnings: parseFloat(e.target.value),\n                  }))\n                }\n                value={selectedLog.tadaEarnings}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">$</InputAdornment>\n                  ),\n                }}\n                fullWidth\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                type=\"number\"\n                id=\"ryde-earnings\"\n                placeholder={'0'}\n                label=\"Ryde Earnings\"\n                onChange={(e) =>\n                  setSelectedLog((state) => ({\n                    ...state,\n                    rydeEarnings: parseFloat(e.target.value),\n                  }))\n                }\n                value={selectedLog.rydeEarnings}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">$</InputAdornment>\n                  ),\n                }}\n                fullWidth\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                required\n                id=\"distance\"\n                label=\"Distance\"\n                fullWidth\n                type=\"number\"\n                value={selectedLog.distance}\n                placeholder={'0'}\n                onChange={(e) =>\n                  setSelectedLog((state) => ({\n                    ...state,\n                    distance: parseFloat(e.target.value),\n                  }))\n                }\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">km</InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default LogListPage;\n","import { Backdrop, CircularProgress } from '@mui/material';\nimport React from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { Routes, Route } from 'react-router-dom';\nimport { auth } from './Firebase';\nimport Navbar from './Navigation/Navbar';\nimport * as Pages from './Pages';\nimport './Styles/App.css';\n\nfunction App() {\n  const [user, loading, error] = useAuthState(auth);\n\n  return (\n    <div style={{ background: '#FAFAFA' }}>\n      {!loading && (\n        <>\n          <Navbar />\n          <Routes>\n            <Route path=\"/about\" element={<Pages.About />} />\n            <Route path=\"/\" element={<Pages.Home />} />\n            <Route path=\"/signin\" element={<Pages.SignIn />} />\n            <Route path=\"/signup\" element={<Pages.SignUp />} />\n            <Route path=\"/dashboard\" element={<Pages.DashboardPage />} />\n            <Route path=\"/account\" element={<Pages.AccountPage />} />\n            <Route path=\"/submit\" element={<Pages.SubmitLogPage />} />\n            <Route path=\"/reset\" element={<Pages.ResetPassword />} />\n            <Route path=\"/loglist\" element={<Pages.LogListPage />} />\n          </Routes>\n        </>\n      )}\n      <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={loading}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}